type Foo0 = Foo0
type Foo1 a = Foo1 a
type Foo2 a b = Foo2 a b
type Foo3 a b c = Foo3 a b c

use Foo0 Foo0
use Foo1 Foo1
use Foo2 Foo2

x = match Foo0 with
  Foo0 -> 1

y = match Foo1 1 with
  Foo1 1 -> 0
  Foo1 _ -> 10

z = match Foo2 1 "hi" with
  Foo2 x _ -> x
  Foo2 1 _ -> 1

w = match Foo3.Foo3 1 2 "bye" with
  Foo3.Foo3 1 2 x -> Text.concatenate x "bye"
  -- where the heck are these locations coming from?
  -- I feel, since concatenate isn't polymorphic, that `Text`
  -- should come from there, not from `x`.
  _ -> ()

()
