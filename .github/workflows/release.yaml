name: "release"

on:
  push:
    tags:
      - "release/*"

  workflow_dispatch:
    inputs:
      version:
        description: 'Release Version (E.g. M4 or M4a)'
        required: true
        type: string

jobs:
  release:
    name: "create_release"
    runs-on: "ubuntu-latest"
    needs:
      - build_linux
      - build_macos
      - build_windows

    steps:
      - uses: actions/checkout@v2

      - name: make download dir
        run: "mkdir /tmp/ucm"

      - name: "download artifacts"
        uses: actions/download-artifact@v2
        with:
          path: /tmp/ucm

      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          version="${{inputs.version}}"
          if [[ -z "${version}" ]] ; then
            version=$(echo "${{github.ref_name}}" | awk 'match($0, /^release\/\w[0-9]+[a-z]?$/, a) {print a[1]}')
          fi
          # E.g. M4a -> M4, M4c -> M4b, M4 -> M3
          prev_version="$(${{ github.workspace }}/scripts/previous_tag.sh "${version}")"

          prereleaseFlag=""
          # Make a pre-release release if we're not on a full milestone version.
          if [[ "${version}" =~ ^M[0-9]+[a-z]$ ]] ; then
            prereleaseFlag="--prerelease"
          fi

          echo "Creating a release from these artifacts:"
          ls -R /tmp/ucm

          gh release create "release/${version}" --target trunk --generate-notes --notes-start-tag "release/${prev_version}" $prereleaseFlag /tmp/ucm/**/*.tar.gz /tmp/ucm/**/*.zip

  build_linux:

    name: "build_linux"
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - name: install stack
        run: |
          curl -L https://github.com/commercialhaskell/stack/releases/download/v2.5.1/stack-2.5.1-linux-x86_64.tar.gz | tar -xz
          echo "$HOME/stack-2.5.1-linux-x86_64/" >> $GITHUB_PATH

      - name: build
        run: stack --no-terminal build --flag unison-parser-typechecker:optimized

      - name: fetch latest Unison Local UI and package with ucm
        run: |
          mkdir -p /tmp/ucm/ui
          UCM=$(stack path | awk '/local-install-root/{print $2}')/bin/unison
          cp $UCM /tmp/ucm/ucm
          wget -O/tmp/unisonLocal.zip https://github.com/unisonweb/unison-local-ui/releases/download/latest/unisonLocal.zip
          unzip -d /tmp/ucm/ui /tmp/unisonLocal.zip
          tar -c -z -f ucm-linux.tar.gz -C /tmp/ucm .

      - name: Upload linux artifact
        uses: actions/upload-artifact@v2
        with:
          if-no-files-found: error
          name: build-linux
          path: ucm-linux.tar.gz

  build_macos:
    name: "build_macos"
    runs-on: macos-10.15
    steps:
      - uses: actions/checkout@v2
      - name: install stack
        run: |
          curl -L https://github.com/commercialhaskell/stack/releases/download/v2.5.1/stack-2.5.1-osx-x86_64.tar.gz | tar -xz
          echo "$HOME/stack-2.5.1-osx-x86_64/" >> $GITHUB_PATH

      - name: remove ~/.stack/setup-exe-cache on macOS
        run: rm -rf ~/.stack/setup-exe-cache

      - name: build
        run: stack --no-terminal build --flag unison-parser-typechecker:optimized

      - name: fetch latest Unison Local UI and package with ucm
        run: |
          mkdir -p /tmp/ucm/ui
          UCM=$(stack path | awk '/local-install-root/{print $2}')/bin/unison
          cp $UCM /tmp/ucm/ucm
          wget -O/tmp/unisonLocal.zip https://github.com/unisonweb/unison-local-ui/releases/download/latest/unisonLocal.zip
          unzip -d /tmp/ucm/ui /tmp/unisonLocal.zip
          tar -c -z -f ucm-macos.tar.gz -C /tmp/ucm .

      - name: Upload macos artifact
        uses: actions/upload-artifact@v2
        with:
          if-no-files-found: error
          name: build-macos
          path: ucm-macos.tar.gz

  build_windows:
    name: "build_windows"
    runs-on: windows-2019

    steps:
      - uses: actions/checkout@v2
      - name: build
        run: stack --no-terminal build --flag unison-parser-typechecker:optimized

      - name: fetch latest Unison Local UI and package with ucm
        # Powershell
        run: |
          mkdir -p tmp\ui
          mkdir -p release\ui
          $UCM = stack exec -- where unison
          cp $UCM .\release\ucm.exe
          Invoke-WebRequest -Uri https://github.com/unisonweb/unison-local-ui/releases/download/latest/unisonLocal.zip -OutFile tmp\unisonLocal.zip
          Expand-Archive -Path tmp\unisonLocal.zip -DestinationPath release\ui
          Compress-Archive -Path .\release\* -DestinationPath ucm-windows.zip

      - name: Upload windows artifact
        uses: actions/upload-artifact@v2
        with:
          if-no-files-found: error
          name: build-windows
          path: ucm-windows.zip
