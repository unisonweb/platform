name: "pre-release"

on:
  workflow_run:
    workflows: ["CI"]
    branches: [ trunk ]
    types:
      - completed
jobs:
  build_linux:

    name: "build_linux"
    runs-on: ubuntu-18.04

    steps:
      - uses: actions/checkout@v2

      # One of the transcripts fails if the user's git name hasn't been set.
      - name: set git user info
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: build
        run: stack --no-terminal build --flag unison-parser-typechecker:optimized

      - name: fetch latest Unison Local UI and package with ucm
        run: |
          mkdir -p /tmp/ucm/ui
          UCM=$(stack path | awk '/local-install-root/{print $2}')/bin/unison
          cp $UCM /tmp/ucm/ucm
          wget -O/tmp/unisonLocal.zip https://github.com/unisonweb/unison-local-ui/releases/download/latest/unisonLocal.zip
          unzip -d /tmp/ucm/ui /tmp/unisonLocal.zip
          tar -c -z -f ucm-linux.tar.gz -C /tmp/ucm .

      - name: Upload linux artifact
        uses: actions/upload-artifact@v2
        with:
          if-no-files-found: error
          name: build-linux
          path: ucm-linux.tar.gz

  build_macos:
    name: "build_macos"
    runs-on: macos-10.15

    steps:
      - uses: actions/checkout@v2

      # One of the transcripts fails if the user's git name hasn't been set.
      - name: set git user info
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: remove ~/.stack/setup-exe-cache on macOS
        run: rm -rf ~/.stack/setup-exe-cache

      - name: build
        run: stack --no-terminal build --flag unison-parser-typechecker:optimized

      - name: fetch latest Unison Local UI and package with ucm
        run: |
          mkdir -p /tmp/ucm/ui
          UCM=$(stack path | awk '/local-install-root/{print $2}')/bin/unison
          cp $UCM /tmp/ucm/ucm
          wget -O/tmp/unisonLocal.zip https://github.com/unisonweb/unison-local-ui/releases/download/latest/unisonLocal.zip
          unzip -d /tmp/ucm/ui /tmp/unisonLocal.zip
          tar -c -z -f ucm-macos.tar.gz -C /tmp/ucm .

      - name: Upload macos artifact
        uses: actions/upload-artifact@v2
        with:
          if-no-files-found: error
          name: build-macos
          path: ucm-macos.tar.gz

  build_windows:
    name: "build_windows"
    runs-on: windows-2019

    steps:
      - uses: actions/checkout@v2
      - name: build
        run: stack --no-terminal build --flag unison-parser-typechecker:optimized

      - name: fetch latest codebase-ui and package with ucm
        # Powershell
        run: |
          mkdir -p tmp\ui
          mkdir -p release\ui
          $UCM = stack exec -- where unison
          cp $UCM .\release\ucm.exe
          Invoke-WebRequest -Uri https://github.com/unisonweb/codebase-ui/releases/download/latest/unisonLocal.zip -OutFile tmp\unisonLocal.zip
          Expand-Archive -Path tmp\unisonLocal.zip -DestinationPath release\ui
          Compress-Archive -Path .\release\* -DestinationPath ucm-windows.zip

      - name: Upload windows artifact
        uses: actions/upload-artifact@v2
        with:
          if-no-files-found: error
          name: build-windows
          path: ucm-windows.zip

  release:
    name: "create_release"
    runs-on: "ubuntu-latest"
    needs:
      - build_linux
      - build_macos
      - build_windows

    steps:
      - name: make download dir
        run: "mkdir /tmp/ucm"

      - name: "download artifacts"
        uses: actions/download-artifact@v2
        with:
          path: /tmp/ucm


      - uses: actions/checkout@v2
      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: true
          title: "Development Build"
          files: |
            /tmp/ucm/**/*.tar.gz
            /tmp/ucm/**/*.zip
